definitions:
  api.createArticleRequest:
    properties:
      content:
        type: string
      headline:
        type: string
    required:
    - content
    - headline
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.loginUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  api.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      password_changed_at:
        type: string
      username:
        type: string
    type: object
  db.Article:
    properties:
      author:
        type: string
      content:
        type: string
      created_at:
        type: string
      edited_at:
        $ref: '#/definitions/sql.NullTime'
      headline:
        type: string
      id:
        type: integer
    type: object
  sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: kamilwrzyszcz95@gmail.com
    name: Kamil Wrzyszcz
  description: An example Go API
  license:
    name: MIT
    url: https://github.com/kamilwrzyszcz/go_example/blob/master/LICENSE.md
  title: Go Example
  version: "1.0"
paths:
  /articles:
    get:
      consumes:
      - application/json
      description: Get the list of articles accoring to specified params
      parameters:
      - description: Article PageID query param
        in: query
        name: page_id
        required: true
        type: integer
      - description: Article PageSize query param
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Article'
            type: array
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get the list of articles
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: Create a new article
      parameters:
      - description: Article payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.createArticleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Article'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create an article
      tags:
      - articles
  /articles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an article as an article owner
      parameters:
      - description: Article ID path param
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete an article
      tags:
      - articles
    get:
      consumes:
      - application/json
      description: Get a specific article by ID
      parameters:
      - description: Article ID path param
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Article'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get an article
      tags:
      - articles
    patch:
      consumes:
      - application/json
      description: Update an article as a article owner
      parameters:
      - description: Article ID path param
        in: path
        name: id
        required: true
        type: integer
      - description: Article update payload
        in: body
        name: payload
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              content:
                type: string
              headline:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Article'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update an article
      tags:
      - articles
  /tokens/renew_access:
    post:
      consumes:
      - application/json
      description: Renew Access Token
      parameters:
      - description: Token payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.renewAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.renewAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      summary: Renew Access Token
      tags:
      - tokens
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.userResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      summary: Create user
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      summary: Login user
      tags:
      - users
  /users/logout:
    post:
      consumes:
      - application/json
      description: Logout a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
