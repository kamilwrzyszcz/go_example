// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kamilwrzyszcz/go_example/session (interfaces: SessionClient)

// Package mockdb is a generated GoMock package.
package mockdb

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	session "github.com/kamilwrzyszcz/go_example/session"
)

// MockSessionClient is a mock of SessionClient interface.
type MockSessionClient struct {
	ctrl     *gomock.Controller
	recorder *MockSessionClientMockRecorder
}

// MockSessionClientMockRecorder is the mock recorder for MockSessionClient.
type MockSessionClientMockRecorder struct {
	mock *MockSessionClient
}

// NewMockSessionClient creates a new mock instance.
func NewMockSessionClient(ctrl *gomock.Controller) *MockSessionClient {
	mock := &MockSessionClient{ctrl: ctrl}
	mock.recorder = &MockSessionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionClient) EXPECT() *MockSessionClientMockRecorder {
	return m.recorder
}

// Del mocks base method.
func (m *MockSessionClient) Del(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Del", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Del indicates an expected call of Del.
func (mr *MockSessionClientMockRecorder) Del(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Del", reflect.TypeOf((*MockSessionClient)(nil).Del), arg0, arg1)
}

// Get mocks base method.
func (m *MockSessionClient) Get(arg0 context.Context, arg1 string) (*session.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*session.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionClientMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionClient)(nil).Get), arg0, arg1)
}

// Set mocks base method.
func (m *MockSessionClient) Set(arg0 context.Context, arg1 string, arg2 *session.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockSessionClientMockRecorder) Set(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockSessionClient)(nil).Set), arg0, arg1, arg2)
}
